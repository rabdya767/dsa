Data Structures : 
    Data Structures are different way of organizing data on your computer, that can be used effectively.

Algorithm : 
    Set of instructions to complete a task.
    Set of rules for a computer program to accomplish a task.

Good Algorithm : 
    - Correctness
    - Efficiency

Types of Data Structures : 
    - Primitive
        - Integer
        - Float
        - Character
        - Boolean
    - Non Primitive
        - Linear
            - Static
                -Array
            - Dynamic
                - Linked List
                - Stack
                - Queue
        - Non linear
            - Tree
            - Graph

Types of Algorithms : 
    - Simple Recursive Algorithms
    - Divide and Conquer Algorithms
    - Dynamic Programming Algorithms
    - Greedy Algorithms
    - Brute Force Algorithms
    - Randomized Algorithms

Recursion : 
    A way of solving a problem by having a function calling itself.

GCD : 
    Euclidean Algorithm : 
        gcd(a, b) = gcd(b, a mod b);

Big O Notations : 
    - Big O : 
        It is a complexity that is going to be less or equal to the worst case.
    - Big - Omega : 
        It is a complexity that is going to be at least more than the best case.
    - Big Theta :
        It is a complexity that is within bounds of the worst and the best cases.

Finding element in Array through Iteration :
    - Big O : O(N)
    - Big - Omega : Omega(1)
    - Big Theta : Theta(n / 2)

O(1) - Constant - Accessing a specific element in Array.
O(N) - Linear - Loop through array elements.
O(LogN) - logarithmic - Find an element in sorted array.
O(N2) - Quadratic - Looking at a every index in the array twice.
O(2N) - Exponential - Double recursion in Fibonacci.

